/**
 ******************************************************************************
 * @file    main.c
 * @author  Auto-generated by STM32CubeIDE
 * @version V1.0
 * @brief   Default main function.
 ******************************************************************************
 */



#include <stdio.h>
#include "uart_driver.h"
#include <stdint.h>

#define F_CPU 16000000UL
#define GPIO_PINS_PER_PORT 16
#define GPIO_C (2 * GPIO_PINS_PER_PORT)

#define LCD_DATA_GPIO_PORT 0 // GPIO A
#define LCD_DATA_GPIO_BASE 8
#define LCD_RS_GPIO (GPIO_C + 8)
#define LCD_RW_GPIO (GPIO_C + 9)
#define LCD_E_GPIO (GPIO_C + 10)

#define LCD_RW_WRITE 0
#define LCD_RW_READ 1
#define LCD_RS_INSTR 0
#define LCD_RS_DATA 1
#define LCD_E_START 1
#define LCD_E_IDLE 0
#define LCD_BUSY 0x80

//Fix prototypes
void lcd_init(void);
void lcd_clear(void);
void lcd_home(void);
void lcd_set_position(void);
void lcd_print_string(void);
void lcd_print_num(void);

// main
int main(void){
	//	init_usart2(19200,F_CPU);
	//	printf("Hello World!!\n");
	//enable clock register
	uint32_t *rcc = (uint32_t*) AHB1ENR;
	*rcc = (*rcc|(1<<LED_NUCLEO_GPIO_PORT));
	int output = LED_NUCLEO_GPIO_PIN;

	//gpio mode output
	while(output <= 15) {
		uint32_t *gpioMode = (uint32_t*) GPIO_MODER;
		*gpioMode = (*gpioMode|(0b01<<(output*2)));
		output++;
	}
	return 0;
}


void lcd_init() {
	//initialize I/O


	//call lcd_clear

	//call lcd_home

}


void lcd_clear() {
	//clears lcd

}


void lcd_home() {
	//homes lcd

}


void lcd_set_position() {

}
